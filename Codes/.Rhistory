source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
p
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
p
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/1_GetData.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/4_FeverCurve.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
source('C:/Users/daenu/GitHub/f-curve/Codes/5_Forecast.R', encoding = 'UTF-8')
install.packages("mailR")
source('~/GitHub/f-curve/Codes/4_FeverCurve.R')
p <- ts_ggplot(
`f-curve` = ts_span(fc, "2020-01-01"),
` f-curve (seven-day ma)` = ts_span(fc_s, "2020-01-01"),
`New Covid-19 cases (in 100, seven-day ma, FOPH)` = rollapply(Cases, noMA, mean, na.rm = TRUE)/100,
title = "Comparison with health crisis"
)
p <- ggLayout(p)
p <- p + scale_x_date(labels =  date_format("%b %Y"))
p <- ggColor3(p)
#p <- addLines(p, myLines, myLabels, -18)
p
download.file(url = "https://www.seco.admin.ch/dam/seco/en/dokumente/Wirtschaft/Wirtschaftslage/indikatoren/wwa_publish.xls.download.xls/wwa_publish.xls", destfile = "../Data/SECOWEA.xls", mode="wb")
#download.file(url = "https://www.seco.admin.ch/dam/seco/en/dokumente/Wirtschaft/Wirtschaftslage/indikatoren/wwa_publish.xls.download.xls/wwa_publish.xls", destfile = "../Data/SECOWEA.xls", mode="wb")
download.file(url = "https://www.seco.admin.ch/dam/seco/de/dokumente/Wirtschaft/Wirtschaftslage/indikatoren/wwa.csv.download.csv/wwa.csv", destfile = "../Data/SECOWEA.csv", mode="wb")
SECO <- read.csv("../Data/SECOWEA.csv", sep = ",")
SECO
#%>% select(c(1,2,3)) %>% na.omit()
WEA <- xts(SECO[,5], order.by = as.Date(paste0(SECO[,4])))
# Packages and settings
#rm(list = ls())
source("AllPackages.R")
SECO <- read.csv("../Data/SECOWEA.csv", sep = ",")
#%>% select(c(1,2,3)) %>% na.omit()
WEA <- xts(SECO[,5], order.by = as.Date(paste0(SECO[,4])))
ts_plot(WEA)
WEA
plot(WEA)
